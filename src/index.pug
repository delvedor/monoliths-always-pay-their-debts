doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Monoliths always pay their debts

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section(data-bespoke-backdrop='intro', style='color: white').trans
        h2(style='margin-left: -70%;').uppercase.left.border-left Monoliths<br/>always<br/>pay their<br/>debts
        br
        br
        br
        p.copyright by Tomas Della Vedova
          br
          a(href="http://twitter.com/delvedor" style="color:white") @delvedor

      section
        img(src='images/delvedor.png', style='width:100%;')

      section
        h3 Who are you?
        i.fa.fa-microphone.fa-5x

      section
        h2 Roadmap
        ul.bullet
          li Monoliths vs Microservices
          li Fastify
          li Let's build our new startup!

      section
        h3 Monoliths vs Microservices
        <a href="https://medium.com/startlovingyourself/microservices-vs-monolithic-architecture-c8df91f16bb4" target="_blank"><img src="images/monoliths-vs-microservices.png" style="width:100%" /></a>

      section(data-bespoke-backdrop='fastify-background', style='color: white').transgray
        img(src='images/fastify-white-landscape.png', style='width:100%')

      section
        h3 Fastify
        p Fastify is a web framework highly focused on providing the best developer experience with the least overhead and a powerful plugin architecture.
        pre.small
          code.language-javascript.
            const fastify = require('fastify')()

            fastify.get('/', async (request, reply) => {
              return { hello: 'world' }
            })

            fastify.listen(3000)
        br
        a(href="https://www.fastify.io/") fastify.io

      section
        h3 Fastify
        h2 Fastify plugins crash guide
        pre
          code.language-javascript.
            fastify.register(
              require('./my-plugin'),
              { options }
            )

      section
        h3 Fastify plugins crash guide
        pre
          code.language-javascript.
            async function myPlugin (fastify, options) {
              // register other plugins
              fastify.register(...)
              // add hooks
              fastify.addHook(...)
              // add routes
              fastify.route(...)
            }

            module.exports = myPlugin


      section
        h2 The API
        p Let's build the next billion dollar startup, <strong>Moo</strong>!
        p Basically twitter, but with more characters.
        p A user should be able to:
        ul.bullet
          li Signup!
          li Post a new <em>moo</em>
          li Get a <em>moo</em> by id
          li Get all the <em>moos</em> of a user

      section
        h3 The API
        p The api will expose three different services, <code>login</code>, <code>moo</code> and <code>user</code>.
        pre
          code.language-bash.
            /signup
            /moo/:id
            /moo/create
            /user/:username/moos

      section
        h3 A little bit of configuration
        p Being consistent across microservices is a difficult task, to help you Fastify provides a powerful CLI.
        pre
          code.language-bash.
            npm install fastify-cli -g

            mkdir moo-project
            cd moo-project

            npm init -y
            fastify generate

      section
        h3 Project structure
        ul.bullet.left
          li <strong><code>plugins</code></strong>: the folder where you will store all your custom plugins
          li <strong><code>services</code></strong>: the folder where you will declare all your endpoints
          li <strong><code>test</code></strong>: the folder where you will declare all your test
          li <strong><code>app.js</code></strong>: your entry point

      section
        h3 Scripts
        ul.bullet.left
          li <strong><code>npm start</code></strong>: run your server
          li <strong><code>npm run colada</code></strong>: run your server with pretty logs<br>(not suitable for production)
          li <strong><code>npm test</code></strong> run your test suite

      section
        h2 “Let's the hack begin”

      section
        h3 Clone the project
        pre.small
          code.language-bash.
            git clone https://github.com/delvedor/monoliths-always-pay-their-debts.git

      section
        img(src='images/mongodb.png', style='width:80%;')

      section
        h3 MongoDB
        pre
          code.language-bash.
            npm install fastify-mongodb

        pre
          code.language-javascript.
            fastify.register(require('fastify-mongodb'), {
              url: 'mongodb://127.0.0.1/moo'
            })

      section
        h2 Security
        img(src='images/wonka-md5.jpg', style='width:40%; margin-top: 20px')

      section
        h3 Security
        p Use <code>bcrypt</code> to store user passwords
        pre
          code.language-bash.
            npm install bcrypt

      section
        h2 Authentication
        img(src='images/basic-auth-over-plain-http.jpg', style='width:60%; margin-top: 20px; margin-bottom: 20px;')
        pre.small
          code.language-bash.
            npm install fastify-basic-auth

      section
        h2 Let's take a look<br/>to our monolith

      section
        h3 Let's take a look to our monolith
        img(src='images/monolith-infra.png', style='width:100%; margin-top: 20px')

      section
        h2 From monolith to microservices

      section
        h3 From monolith to microservices
        img(src='images/services-infra.png', style='width:100%; margin-top: 20px')

      section
        h4 Awesome! Now update all your clients<br/>so they know which address to call<br/>based on the service they need to use.
        img(src='images/clients.gif', style='width:70%; height: auto; margin-top: 20px')

      section
        h1.red WRONG!

      section
        h2.left The infrastructure<br/>should be transparent<br/>for the client.

      section
        h3 Solution
        h2 Gateway

      section
        h3 Gateway
        pre
          code.language-bash.
            npm install fastify-http-proxy

        pre
          code.language-javascript.
            // don't forget to handle the authentication!
            fastify.register(require('fastify-http-proxy'), {
              upstream: 'http://localhost:3030',
              prefix: '/post'
            })

      section
        h3 Gateway
        img(src='images/gateway-infra.png', style='width:100%;')

      section(data-bespoke-backdrop='intro', style='color: white').trans
        h2.uppercase Thanks!
        br
        p by Tomas Della Vedova
          br
          a(href="http://twitter.com/delvedor") @delvedor

    script(src='build/build.js')
    script(src='http://localhost:35729/livereload.js')
